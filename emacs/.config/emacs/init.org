#+title: Emacs Configuration
#+property: header-args :tangle "init.el"

* Future Tasks

- [ ] Sort config

- [ ] Denote

- [ ] Eat/Eshell?

- [ ] LSP

- [ ] Treesitter?

- [ ] Harpoon

- [ ] Vim folding better keybinds

- [ ] Org heading size variety

- [ ] Org toggle text formatting

* Installation

** Dependencies

*** Version
Before using this configuration, please ensure that Emacs v30.1 is installed. On Debian this can be achieved via [[https://backports.debian.org/Instructions/][backports]].

*** Font Installation
This configuration uses *Iosevka* fonts, which can be installed as follows:

#+begin_src sh :tangle no
  wget https://github.com/be5invis/Iosevka/releases/download/v33.2.2/PkgTTF-IosevkaAile-33.2.2.zip
  unzip PkgTTF-IosevkaAile-33.2.2.zip
  wget https://github.com/be5invis/Iosevka/releases/download/v33.2.2/PkgTTF-IosevkaFixedSS14-33.2.2.zip
  unzip PkgTTF-IosevkaFixedSS14-33.2.2.zip
  mkdir -p ~/.local/share/fonts
  mv *.ttf ~/.local/share/fonts/
  fc-cache -f -v
#+end_src

** Setup
Ensure that no files exist at =~/.emacs= and =~/.emacs.d/=. Within the =~/dotfiles= directory, run the following:

#+begin_src sh :tangle no
  stow -R --no-folding emacs -v
  emacs # start emacs traditionally to ensure it installs correctly
  systemctl --user enable emacs
  systemctl --user start emacs
#+end_src

* Configuration

** Custom File (1)
Customized variables via the Easy Customization Interface are saved here:

#+begin_src emacs-lisp
  (setq custom-file "~/.config/emacs/emacs-custom.el")
#+end_src

This is loaded later in the configuration, at the end.

** Package Management

#+begin_src emacs-lisp
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
  			 ("melpa-stable" . "https://stable.melpa.org/packages/")
  			 ("org" . "https://orgmode.org/elpa/")
  			 ("elpa" . "https://elpa.gnu.org/packages/")))
  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

  ;; Initialize use-package
  ;; -p means "predicate"
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
  (require 'use-package)
  ;; Install all packages specified by use-package
  (setq use-package-always-ensure t)
#+end_src

** Theming
This includes various graphical customizations, including fonts.

#+begin_src emacs-lisp
  (setq inhibit-startup-message t)
  (setq ring-bell-function 'ignore)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (setq-default display-line-numbers 'relative)
#+end_src

*** Font Settings

#+begin_src emacs-lisp
  (setq vitix/fixed-font-height 150)
  (setq vitix/variable-font-height 140)
  (set-face-attribute 'default nil :font "Iosevka Fixed SS14" :height vitix/fixed-font-height)
  (set-face-attribute 'fixed-pitch nil :font "Iosevka Fixed SS14" :height vitix/fixed-font-height)
  (set-face-attribute 'line-number nil :font "Iosevka Fixed SS14" :height vitix/fixed-font-height)
  (set-face-attribute 'line-number-current-line nil :font "Iosevka Fixed SS14" :height vitix/fixed-font-height)
  (set-face-attribute 'variable-pitch nil :font "Iosevka Aile" :height vitix/variable-font-height)
#+end_src

*** Theme Packages

#+begin_src emacs-lisp

  ;; run M-x nerd-icons-install-fonts after installing
  (use-package nerd-icons)
  (use-package nerd-icons-dired
    :hook
    (dired-mode . nerd-icons-dired-mode))
  (use-package doom-modeline
    :config
    (setq doom-modeline-modal-modern-icon nil)
    :init
    (doom-modeline-mode 1))

  (use-package doom-themes
    :config
    (setq doom-themes-enable-bold t)
    (setq doom-themes-enable-italic t)
    (load-theme 'doom-gruvbox t)
    (doom-themes-org-config))

  (use-package spacious-padding
    :init
    (spacious-padding-mode 1))
#+end_src

** Undo Tree

#+begin_src emacs-lisp
  (setq make-backup-files nil)
  (use-package undo-tree
    :config
    (setq undo-tree-history-directory-alist '(("." . "~/.cache/emacs/undo/")))
    :init
    (global-undo-tree-mode))
#+end_src

** Evil Mode
Vim motions in Emacs!

#+begin_src emacs-lisp
  (use-package evil
    :init
    (setq evil-undo-system 'undo-tree)
    (setq evil-want-C-u-scroll t)
    (setq evil-want-Y-yank-to-eol t)
    :config
    (evil-mode 1)
    (evil-global-set-key 'motion "j" 'evil-next-visual-line)
    (evil-global-set-key 'motion "k" 'evil-previous-visual-line)
    )
#+end_src

** Terminal
Currently, I'm using [[https://github.com/akermu/emacs-libvterm][vterm]], but I may switch to [[https://codeberg.org/akib/emacs-eat][eat]] in the future.

Note that =vterm= requires libterm. On Debian, this is =libtool-bin=.

#+begin_src emacs-lisp
  ;; vterm requires libtool-bin
  (use-package vterm
    :config
    (setq vterm-shell "/usr/bin/fish")
    )
#+end_src

** Completion

My completion stack is as follows:
- vertico
- consult
- marginalia
- orderless

#+begin_src emacs-lisp
  (use-package vertico
    :init
    (vertico-mode 1)
    (savehist-mode 1)
    (add-hook 'rfn-eshadow-update-overlay-hook #'vertico-directory-tidy))

  (use-package consult)

  (use-package marginalia
    :init
    (marginalia-mode 1))

  (use-package orderless
    :custom
    (completion-styles '(orderless basic))
    (completion-category-overrides '((file (styles basic partial-completion)))))
#+end_src

** unsorted

#+begin_src emacs-lisp
  ;; Keybinds
  (which-key-mode t)
  (use-package general
    :config
    (general-evil-setup t)
    (general-create-definer vitix/keymap
      :keymaps '(normal insert visual emacs)
      :prefix "SPC"
      :global-prefix "C-SPC")
    (vitix/keymap
      "SPC" '(consult-buffer :which-key "Consult Buffer")
      "C-SPC" '(consult-buffer :which-key "Consult Buffer")
      "f" '(consult-find :which-key "Consult [F]ind")
      "t" '(vterm :which-key "[T]erminal")

      "h" '(:ignore t :which-key "[H]arpoon")
      "hs" '(bookmark-save :which-key "Harpoon [S]ave")
      "hl" '(bookmark-load :which-key "Harpoon [L]oad")
      "hf" '(consult-bookmark :which-key "Harpoon [F]ind")
      "hd" '(bookmark-delete :which-key "Harpoon [D]elete")
      )

    (general-define-key
     :states 'normal
     "-" #'dired-jump)

    (general-define-key
     :keymaps 'dired-mode-map
     "-" #'dired-up-directory)

    (general-define-key
     :keymaps 'vterm-mode-map
     "C-S-v" #'vterm-yank)
    )

  ;; Dired
  (add-hook 'dired-mode-hook #'dired-hide-details-mode)
  ;; R - rename/relocate file
  ;; C - copy file
  ;; D - delete file
  ;; d - mark for deletion
  ;; x - delete
  ;; m - mark
  ;; t - toggle mark
  ;; u - unmark
  ;; k - hide files (does not delete)
  ;; g - reload dired
  ;; M - modify permissions (chmod syntax)
  ;; C-x C-q - make buffer writeable, then use C-c C-c to save changes

  ;; M-n inserts the filepath under point into minibuffer


  (use-package magit)

  ;; always keep this at the end so customizations stay
  (load custom-file)
#+end_src
